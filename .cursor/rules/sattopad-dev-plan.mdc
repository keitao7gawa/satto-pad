---
alwaysApply: true
---
# SattoPad 開発計画（詳細 / Cursor Rules）

## 目的
- MVPを迅速に完成し、常用できる品質で日常フローに組み込む。
- 小さく作って確実に磨く。UIの美観やMarkdownプレビューは最後に回す。

## マイルストーンと受け入れ基準

### M1: メニューバー + ポップオーバー + TextEditor
- 実装
  - `SattoPadApp.swift` に `MenuBarExtra` を実装し、`ContentView` をポップオーバーに表示
  - Dock非表示（`Info.plist` の `LSUIElement = YES`）
  - ポップオーバーのサイズ固定（例: 420×520）と見出し/余白の基本レイアウト
- 受け入れ基準
  - Dockにアイコンが出ず、メニューバーからワンクリックでポップオーバーが開閉
  - `TextEditor` で複数行の編集が可能
- 手動テスト
  - 起動→メニューバー表示→クリック開閉→入力できる→閉じても再度開く

### M2: グローバルショートカット（表示/非表示トグル）
- 実装（いずれか）
  - Carbon `RegisterEventHotKey` を直接利用
  - もしくは [KeyboardShortcuts (SPM)](https://github.com/sindresorhus/KeyboardShortcuts) を採用（推奨。実績豊富/保守容易）
- 受け入れ基準
  - 既定 `Cmd+Shift+T` で表示/非表示をトグル
  - 設定UIまたは最低限の内部既定値で動作し、衝突時はユーザーに通知
- 手動テスト
  - Finderや他アプリ上でショートカット実行→ポップオーバーが最前面に出る/閉じる

### M3: 自動保存・読み込み（Markdownファイル）
- 実装
  - 既定パス `~/Documents/SattoPad.md` を使用（初回は自動作成）
  - 入力変更をデバウンス（約1秒）して保存
  - 起動時に既定/設定済みパスから読み込み
  - 設定UIで保存先を変更可能（`NSOpenPanel`）。非サンドボックスならパス保存、サンドボックス時はブックマーク採用
- 受け入れ基準
  - 入力が自動保存され、アプリ再起動で内容が復元
  - 保存先変更後も継続して自動保存/復元
- 手動テスト
  - ファイルを外部で編集→再読み込みの挙動確認（次回起動時/明示的リロード）

### M4: UI仕上げ / Markdownプレビュー（将来）
- 実装
  - 透明感・角丸・余白の調整
  - Markdownプレビュー（ライブ/サイドバイサイド）
- 受け入れ基準
  - 見やすく邪魔にならないUI、軽快な操作感

## 設計指針
- 単純さ最優先。グローバル状態は `ObservableObject` で最小限に。
- 入力中のテキストは `@State` → `@ObservedObject` 経由で保存レイヤに橋渡し。
- ファイルI/Oはメインスレッドを塞がない（ディスク書き込みはバックグラウンドキュー、UI更新はメインへ戻す）。
- 保存は冪等・安全に（テンポラリ→アトミック置換）。

## 設定と永続化
- `UserDefaults`
  - `sattoPad.markdownPath`: Markdownファイルのフルパス
  - `sattoPad.hotkey`: 修飾キー + キーコード（ライブラリ準拠）
- 既定値
  - ファイル: `~/Documents/SattoPad.md`
  - ホットキー: `Cmd + Shift + T`

## エラー/例外シナリオ
- ファイル読み込み失敗: 空で開く + バナー/トーストで通知
- 書き込み失敗: リトライ + 保存先再設定を促す
- ホットキー衝突: エラートースト + 設定UIを開くメニュー項目

## メニュー構成（案）
- メニューバーアイコン → メニュー
  - `Open SattoPad`（ポップオーバーを開く）
  - `Toggle with Shortcut…`（設定UI）
  - `Select Save Location…`
  - `Reload from File`
  - `Quit`

## ブランチ/PR運用
- ブランチ: `feature/m1-menubar`, `feature/m2-hotkey`, `feature/m3-autosave` など
- PRは小さく、自己レビュー用のチェックリスト（ビルド/手動テスト）を添付

## 品質ゲート（手動）
- ビルド成功、クラッシュなし
- メモ入力→保存→再起動で復元
- グローバルショートカットが他アプリ前面でも動作
- I/O失敗時のユーザー通知が確認できる

## 既知のリスクと対策
- ホットキーの競合: 既定値は一般的でない組み合わせを選定。衝突検知/再設定導線を用意
- サンドボックス有無: 配布形態に応じてブックマーク採用可否を切替
- 余計な常駐負荷: オブザーバやタイマーは最小限に、デバウンス設定で負荷軽減

## 完了の定義（MVP）
- M1〜M3が受け入れ基準を満たし、日常利用で不満がない
- クイック操作（クリック/ショートカット）→即書いて閉じるまでがストレスない
